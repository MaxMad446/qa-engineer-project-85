---
  - summary: |
      Проверка входа пользователя с несуществующими логином и паролем
    requirement: |
      При неправильном логине или пароле пользователь должен получить сообщение об ошибке
    prerequisites:
      Открыта страница логина
    test-data: |
      Логин = Логин = hexlet Пароль = badpass
    steps:
      - Вводим логин
      - Вводим пароль
      - Нажимаем кнопку «Войти»
    expected-result: |
      Пользователь должен получить сообщение об ошибке


  - summary: |
    Проверка регистрации пользователя
    requirement: |
      При вверном вводе данных в форме регистрации происходит регистрация пользователя в системе
    prerequisites: |
      Открыта страница регистрации
    test-data: |
      no-data
    steps:
      - Вводим Nickname
      - Вводим Email
      - Вводим Password
      - Вводим Password Confirmation
      - Нажимаем кнопку «Submit»
    expected-result: |
      Пользователь успешно зарегистрирован


  - summary: |
      Проверка изменения личного фото пользователя
    requirement: |
      Пользователь имеет возможность изменения личного фото в профиле
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - В правом верхнем углу нажать на свой никнейм
      - Нажать "My Profile"
    expected-result: |
      Пользователь имеет возможность изменения личного фото в профиле


  - summary: |
      Проверка авторизации пользователя через Discord
    requirement: |
      При нажатии "Sign in with Discord" происходит авторизация пользователя в системе через Discord
    prerequisites: |
      Открыта страница регистрации
    test-data: |
      Пользователь вошел в свой аккаунт на Discord
    steps:
      - Нажимаем "Sign in with Discord"
    expected-result: |
      Происходит авторизация пользователя в системе через Discord

  - summary: |
      Проверка авторизации пользователя через GitHub
    requirement: |
      При нажатии "Sign in with GitHub" происходит авторизация пользователя в системе через GitHub
    prerequisites: |
      Открыта страница регистрации
    test-data: |
      Пользователь вошел в свой аккаунт на GitHub
    steps:
      - Нажимаем "Sign in with GitHub"
    expected-result: |
      Происходит авторизация пользователя в системе через GitHub

  - summary: |
      Проверка успешной авторизации
    requirement: |
      При верном вводе логине и пароля пользователь должен войти в систему
    prerequisites: |
      Открыта страница "Войти"
    test-data: |
      no-data
    steps:
      - Вводим Email
      - Вводим Password
      - Нажимаем кнопку «Submit»
    expected-result: |
      Пользователь успешно авторизован

  - summary: |
      Проверка авторизации незарегистрированного пользователя
    requirement: |
      При неправильном логине или пароле пользователь должен получить сообщение об ошибке
    prerequisites:
      Открыта страница "Войти"
    test-data: |
      Email = ivanov111@mail.ru Password = Ivanov1234567890
    steps:
      - Вводим логин
      - Вводим пароль
      - Нажимаем кнопку «Войти»
    expected-result: |
      Пользователь не авторизован и видит ошибку

  - summary: |
      Проверка логаута пользователя
    requirement: |
      При нажатии "Sign Out" в личном кабинете, происходит выход из аккаунта пользователя
    prerequisites:
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - Нажимаем на имя пользователя (правый верхний угол)
      - Нажимаем "Sign Out"
    expected-result: |
      Происходит логаут пользователя

  - summary: |
      Проверка создания игры
    requirement: |
      При нажатии "CREATE A GAME" появляется форма создания игры
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - Нажимаем "CREATE A GAME"
      - Заполняем форму любыми данными
      - Нажимаем "CREATE BATTLE"
    expected-result: |
      Происходит создание игры

  - summary: |
      Проверка входа в созданную другим пользователем игру  
    requirement: |
      При нажатии "Fight" происходит вход в созданную другим пользователем игру 
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - У любой созданной игры нажимаем "Fight"
    expected-result: |
      Происходит вход в созданную другим пользователем игру

  - summary: |
      Проверка перехода между вкладками "Lobby, tournaments, history" в личном кабинете
    requirement: |
      При нажатии на кнопки происходит переход между вкладками
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - Нажимаем на вкладку "tournaments"
      - Нажимаем на вкладку "history"
    expected-result: |
      Происходит переключение вкладок

  - summary: |
      Проверка входа в игру в качестве зрителя
    requirement: |
      При нажатии кнопки "Show" происходит вход в игру в качестве зрителя
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - Нажимаем на вкладку "tournaments"
      - У любой игры нажимаем кнопку "Show"
    expected-result: |
      Происходит переход игру в качестве зрителя

  - summary: |
      Проверка переключения вкладок в "LEADERBOARD"
    requirement: |
      При нажатии на кнопки в "LEADERBOARD" происходит переход между вкладками рейтинга
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - Нажимаем на вкладку "MONTH"
      - Нажимаем на вкладку "ALL"
    expected-result: |
      Происходит переход между вкладками рейтинга

  - summary: |
      Проверка отправления сообщений в чат на мейне
    requirement: |
      При введении текста в окно чата, сообщение отправляется пользователям
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - В окне чата пишем любое сообщение, например - Hi!
    expected-result: |
      Сообщение отправлено и отображается в чате

  - summary: |
      Проверка отправления сообщений в чат в игре
    requirement: |
      При введении текста в окно чата, сообщение отправляется пользователям
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - Создаем игру
      - В окне чата пишем любое сообщение, например - Hi!
    expected-result: |
      Сообщение отправлено и отображается в чате

  - summary: |
      Проверка открытия карточки пользователя
    requirement: |
      При нажатии на ник пользователя, открывается карточка с информацией о нем
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - Нажимаем на ник любого пользователя на странице
    expected-result: |
      Происходит открытие карточки с информацией о пользователе    

  - summary: |
      Проверка адаптивности сайта к мобильной версии
    requirement: |
      Сайт адаптируется к мобильным устройствам
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - Открываем DevTools
      - Проверить адаптивность к любому мобильному устройству, например - iPhone 13
    expected-result: |
      Сайт адаптируется к мобильным устройствам  

  - summary: |
      Проверка создания новой игры с ботом
    requirement: |
      При создании игры есть возможность игры с ботом
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      no-data
    steps:
      - Нажимаем "CREAT A GAME"
      - Выбираем "With a bot"
      - Нажимаем "CREATE BATTLE"
    expected-result: |
      Создается новая игра с ботом

  - summary: |
      Проверка создания игры без регистрации пользователя в системе
    requirement: |
      Существует возможность создания игры без регистрации пользователя в системе
    prerequisites: |
      no-data
    test-data: |
      no-data
    steps:
      - Нажимаем "TRY SIMPLE BATTLE"
    expected-result: |
      Создается игра без регистрации пользователя в системе

  - summary: |
      Проверка возможности победы пользователя в игре 
    requirement: |
      Существует возможность для пользователя победить в игре
    prerequisites: |
      Открыта страница личного кабинета
    test-data: |
      const _ = require("lodash");
      const R = require("rambda");

      const solution = (width, length) => {
      return width * length;
      };

      module.exports = solution;
    steps:
      - Нажимаем "CREAT A GAME"
      - Выбираем "With a bot"
      - Выбираем задачу "rect_area"
      - Нажимаем "CREATE BATTLE"
      - Вводим тестовые данные
      - Нажимаем "RUN"
    expected-result: |
      Пользователь побеждает в игре